##snippet which controls creation of a finder by using a reference which returns a single result
##when the reference has property unique=global true is returned
##when the reference has property dao.finder.single=true true is returned
##otherwise false
##stop if $modelObject is null
#if(!$modelObject)
  $metafactory.error("modelObject not found in context")
#end
##
##stop if $currentReference is null
#if(!$modelReference)
  $metafactory.error("modelReference not found in context")
#end
##
#set($modelobject=$modelObject)  ## element of model
#set($modelObjectName=${modelobject.name})
##
#set($reference=$modelReference)
#set($referenceName=${reference.name})
#set($multiplicity=${reference.multiplicity})
##
#set($isUnique=$reference.hasMetaData("unique", "global"))
#set($daoFinderSingle=$reference.hasMetaData("dao.finder.single", "true"))
#if($isUnique) true
#elseif($daoFinderSingle) true
#else false #end
#if(($multiplicity=="0..n" || $multiplicity=="1..n") && ($isUnique || $daoFinderSingle))
  $metafactory.error("Don't know how to create a finder which returns a singleResult for reference $referenceName of multiplicity $multiplicity of object $modelObjectName")
#end
