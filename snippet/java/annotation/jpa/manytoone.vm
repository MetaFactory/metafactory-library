##Create the @ManyToOne annotation with all it's possible attributes if applicable
##stop if $modelPackage is null
#if(!$modelPackage)
  $metafactory.error("modelPackage not found in context")
#end
##
##stop if $modelObject is null
#if(!$modelObject)
  $metafactory.error("modelObject not found in context")
#end
##stop if $modelReference is null
#if(!$modelReference)
  $metafactory.error("modelReference not found in context")
#end
##
#set($reference=$modelReference)
#set($multiplicity=${reference.multiplicity})
#if($multiplicity != "0..1" && $multiplicity != "1..1")
  $metafactory.error("Invalid multiplicity ($multiplicity) found. Only 0..1 and 1..1 is supported by JoinColumn")
#end
#set($modelObjectName=${modelObject.name})
#set($referenceName=${reference.name})
#set($referenceNameAU=$metafactory.allUpper($referenceName))
#set($referenceNameAL=$metafactory.allLower($referenceName))
#set($referenceType=${reference.type})
#set($referenceTypeAU=$metafactory.allUpper($referenceType))
#set($referenceTypeAL=$metafactory.allLower($referenceType))
#set($referenceObjectElement=$modelPackage.findObjectByName($referenceType))
#set($required=${reference.notnull})
#if($required && $required=="true")
  #set($optional=false)
  #if($multiplicity == "0..1")
    $metafactory.error("object=${modelObjectName}. reference=${referenceName}. Inconsistent multiplicity ($!multiplicity) and notnull ($!required) attributes found. If multiplicity is 0..1 notnull must be false.")
  #end
#else
  #set($optional=true)
  #if($multiplicity == "1..1")
    $metafactory.error("object=${modelObjectName}. reference=${referenceName}. Inconsistent multiplicity ($!multiplicity) and notnull ($!required) attributes found. If multiplicity is 1..1, notnull must be true.")
  #end
#end
$metafactory.addLibraryToClass("javax.persistence.ManyToOne")##
$metafactory.addLibraryToClass("javax.persistence.CascadeType")##
@ManyToOne(optional=${optional}, cascade={CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH})
